{"ast":null,"code":"var _jsxFileName = \"/home/xander/project/react/02/src/components/stage_1.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useContext, useState } from \"react\";\nimport { Button, Form, Alert } from \"react-bootstrap\";\nimport { MyContext } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Stage1() {\n  _s();\n  const textInput = useRef();\n  const context = useContext(MyContext);\n  const [error, setError] = useState([false, '']);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = textInput.current.value;\n    if (validation(value)) {\n      setError([false, \"\"]);\n      context.addPlayer(value);\n      textInput.current.value = \"\";\n    } else {\n      console.log(\"error\");\n    }\n  };\n  const validation = value => {\n    if (value === \"\") {\n      setError([true, \"You must type\"]);\n      return false;\n    }\n    if (value.length <= 2) {\n      setError([true, \"You must enter bigger\"]);\n      return false;\n    }\n    return true;\n  };\n  console.log(context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"mb-4\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Add player\",\n          name: \"player\",\n          ref: textInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), error[0] ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mb-4 mt-3\",\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"App player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), context.state.players && context.state.players.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: context.state.players.map((item, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: item\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_s(Stage1, \"1QjWpRUGwYs7J275A58lGdoREGc=\");\n_c = Stage1;\nexport default Stage1;\nvar _c;\n$RefreshReg$(_c, \"Stage1\");","map":{"version":3,"names":["React","useRef","useContext","useState","Button","Form","Alert","MyContext","Stage1","textInput","context","error","setError","handleSubmit","e","preventDefault","value","current","validation","addPlayer","console","log","length","state","players","map","item","idx"],"sources":["/home/xander/project/react/02/src/components/stage_1.js"],"sourcesContent":["import React, { useRef, useContext, useState } from \"react\";\nimport { Button, Form, Alert } from \"react-bootstrap\"\n\nimport { MyContext } from \"../context\";\n\nfunction Stage1() {\n  const textInput = useRef()\n  const context = useContext(MyContext) \n  const [error,setError]=useState([false,''])\n  const handleSubmit=(e)=>{\n    e.preventDefault()\n    const value=textInput.current.value\n    if (validation(value)){\n      setError([false,\"\"])\n      context.addPlayer(value)\n      textInput.current.value=\"\"\n    }else{\n      console.log(\"error\")\n    }\n  }\n  const validation=(value)=>{\n    if(value===\"\"){\n      setError([true,\"You must type\"])\n      return false\n    }\n    if (value.length <=2){\n      setError([true,\"You must enter bigger\"])\n      return false\n    }\n    return true\n  }\n  console.log(context)\n  return <div>\n    <Form className=\"mb-4\" onSubmit={handleSubmit}>\n      <Form.Group>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Add player\"\n          name=\"player\"\n          ref={textInput}\n        />\n      </Form.Group>\n      {\n        error[0] ?\n          <Alert variant=\"danger\">\n            {error[1]}\n          </Alert>\n        :null\n      }\n      <Button className=\"mb-4 mt-3\" variant=\"primary\" type=\"submit\">\n        App player\n      </Button>\n\n    </Form>\n    {\n      context.state.players&& context.state.players.length>0?\n      <>\n        <hr/>\n        <div>\n          <ul className=\"list-group\">\n            {context.state.players.map((item,idx)=>{\n              return(<li key={idx} className=\"list-group-item\">\n                {item}\n              </li>)\n            })}\n          </ul>\n        </div>\n      </>\n      :null\n    }\n  </div>;\n}\n\nexport default Stage1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}